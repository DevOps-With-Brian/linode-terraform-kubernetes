on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
    branches:
      - main
jobs:
  validate_commit:
    name: Validating Commit Message
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{github.event.after}}
      - name: Get Commit Message
        run: |
          echo "MSG=$(git log --format=%B -n 1 ${{github.event.after}})" >> $GITHUB_ENV
      - name: Install Commitizen
        run: pip install -U Commitizen
      - name: Check For Valid Commit Message
        run: cz check -m "${{env.MSG }}"
  terraform_pr_checks:
    needs: validate_commit
    name: Validating Terraform
    runs-on: ubuntu-latest
    steps:
    - uses: hashicorp/setup-terraform@v2
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v34

    - name: List all changed files
      run: |
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "$file was changed"
        done

    - name: Check For Changes in lke folder
      id: changed-files-lke
      uses: tj-actions/changed-files@v34
      with:
        files: |
          lke/**

    - name: Check For Changes in dns folder
      id: changed-files-dns
      uses: tj-actions/changed-files@v34
      with:
        files: |
          dns/**

    - name: Run step if any file(s) in the lke folder change
      if: steps.changed-files-lke.outputs.any_changed == 'true'
      run: |
        echo "One or more files in the lke folder has changed."
        echo "List all the files that have changed: ${{ steps.changed-files-lke.outputs.all_changed_files }}"

    - name: Run step if any file(s) in the dns folder change
      if: steps.changed-files-dns.outputs.any_changed == 'true'
      run: |
        echo "One or more files in the dns folder has changed."
        echo "List all the files that have changed: ${{ steps.changed-files-dns.outputs.all_changed_files }}"

  terraform_dns_checks:
    needs: terraform_pr_checks
    if: jobs.terraform_pr_checks.changed-files-dns.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      id: fmt
      working-directory: ./dns
      run: terraform fmt -check
      continue-on-error: true
