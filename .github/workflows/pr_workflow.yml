on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
jobs:
  validate_commit:
    name: Validating Commit Message
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{github.event.after}}
      - name: Get Commit Message
        run: |
          echo "MSG=$(git log --format=%B -n 1 ${{github.event.after}})" >> $GITHUB_ENV
      - name: Install Commitizen
        run: pip install -U Commitizen
      - name: Check For Valid Commit Message
        run: cz check -m "${{env.MSG }}"
  terraform_pr_checks:
    needs: validate_commit
    name: Validating Terraform
    runs-on: ubuntu-latest
    steps:
    - uses: hashicorp/setup-terraform@v2

    - run: terraform init

    - id: plan
      run: terraform plan -no-color

    - run: echo ${{ steps.plan.outputs.stdout }}
    - run: echo ${{ steps.plan.outputs.stderr }}
    - run: echo ${{ steps.plan.outputs.exitcode }}